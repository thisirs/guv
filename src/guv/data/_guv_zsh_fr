#compdef guv

# AUTOMATICALLY GENERATED by `shtab`


_shtab_guv_commands() {
  local _commands=(
    "csv_create_groups:Création aléatoire de groupes d\'étudiants prêt à charger sous Moodle."
    "csv_groups:Fichiers csv de groupes présents dans \`\`effectif.xlsx\`\` pour Moodle."
    "csv_groups_groupings:Fichier csv de groupes et groupements à charger sur Moodle pour les créer."
    "doit:Permet d\'avoir accès aux commandes doit sous-jacentes"
    "pdf_attendance:Fichier pdf de feuilles de présence."
    "pdf_attendance_full:Fichier zip de feuilles de présence nominatives par groupe et par semestre."
    "send_email:Envoie de courriel à chaque étudiant."
    "xls_grade_book_group:Fichier Excel de notes par groupe."
    "xls_grade_book_jury:Fichier Excel pour la gestion d\'un jury d\'UV"
    "xls_grade_book_no_group:Fichier Excel de notes individuelles."
    "xls_student_data:Agrège les informations spécifiées dans la variable \`\`DOCS\`\`"
    "zoom_breakout_rooms:Crée un fichier csv prêt à charger sur Zoom pour faire des groupes"
  )
  _describe 'guv commands' _commands
}

_shtab_guv_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_guv_csv_create_groups_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-G,--grouping}"[Pré-groupes dans lesquels faire des sous-groupes]:grouping:_guv_column"
  {-n,--num-groups}"[Nombre de groupes à créer (par sous-groupes si spécifié)]:num_groups:"
  {-s,--group-size}"[Taille des groupes \: binômes, trinômes ou plus]:group_size:"
  {-p,--proportions}"[Liste de proportions pour créer les groupes]:proportions:"
  {-t,--template}"[Modèle pour donner des noms aux groupes avec \`\{title\}\`, \`\{grouping_name\}\` ou \`\{group_name\}\`]:_template:"
  {-l,--names}"[Liste de mots clés pour construire les noms des groupes]:names:"
  {-o,--ordered}"[Ordonner la liste des étudiants par ordre alphabétique ou par colonnes]:ordered:_guv_columns"
  {-g,--global}"[Ne pas remettre à zéro la suite des noms de groupes entre chaque groupement]"
  {-r,--random}"[Permuter aléatoirement les noms de groupes]"
  "--other-groups[Liste de colonnes de groupes déjà formés qui ne doivent plus être reformés.]:other_groups:_guv_columns"
  "--affinity-groups[Liste de colonnes de groupes d\'affinité.]:affinity_groups:_guv_columns"
  "--max-iter[Nombre maximum d\'essais pour trouver des groupes avec contraintes (par défaut 1000).]:max_iter:"
  ":Nom associé à l\'ensemble des groupes créés. Repris dans le nom du fichier créé et dans le nom des groupes créés suivant la \*template\* utilisée.:"
)

_shtab_guv_csv_groups_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-g,--groups}"[Liste des groupements à considérer via un nom de colonne. Par défaut, les groupements \`\`Cours\`\`, \`\`TD\`\` et \`\`TP\`\` sont utilisés.]:groups:_guv_columns"
  {-l,--long}"[Utiliser les noms de groupes de Cours\/TD\/TP au format long, c\'est à dire \"TP1\" et \"TD1\" au lieu de \"T1\" et \"D1\"]"
  {-s,--single}"[Créer un unique fichier]"
)

_shtab_guv_csv_groups_groupings_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "-g[Nombre de groupes dans chaque groupement]:ngroups:"
  "-f[Format du nom de groupe (par défaut\: D\#\#_P1_\@)]:ngroupsf:"
  "-G[Nombre de groupements différents]:ngroupings:"
  "-F[Format du nom de groupement (par défaut\: D\#\#_P1)]:ngroupingsf:"
)

_shtab_guv_doit_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(-)*:args:"
)

_shtab_guv_pdf_attendance_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-t,--title}"[Spécifie un titre qui sera utilisé dans les feuilles de présence et le nom du fichier généré. Par défaut, on a \`\`Feuille de présence\`\`.]:title:"
  {-g,--group}"[Permet de créer des groupes pour faire autant de feuilles de présence. Il faut spécifier une colonne du fichier central \`\`effectif.xlsx\`\`.]:group:_guv_column"
  {-b,--blank}"[Ne pas faire apparaître le nom des étudiants (utile seulement avec --group).]"
  {-c,--count}"[Utilise une liste d\'effectifs au lieu de \`\`--group\`\`. Le nom des groupes peut être spécifié par \`\`--names\`\`. Sinon, les noms de groupe sont de la forme \`\`Groupe 1\`\`, \`\`Groupe 2\`\`,...]:count:"
  {-n,--names}"[Spécifie le nom des groupes correspondants à \`\`--count\`\`. La liste doit être de même taille que \`\`--count\`\`.]:names:"
  {-e,--extra}"[Permet de rajouter des lignes supplémentaires vides en plus de celles déjà présentes induites par \`\`--group\`\` ou fixées par \`\`--count\`\`.]:extra:"
  "--tiers-temps[Spécifie la colonne pour les étudiants placés dans une salle dédiée. Si colonne non spécifiée, \`\`None\`\`.]:tiers_temps:_guv_column"
  "--save-tex[Permet de laisser les fichiers .tex générés pour modification éventuelle.]"
)

_shtab_guv_pdf_attendance_full_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--title[Spécifie un titre qui sera utilisé dans les feuilles de présence et le nom du fichier généré. Par défaut, on a \`\`Feuille de présence\`\`.]:title:"
  {-g,--group}"[Permet de spécifier une colonne de groupes pour faire des feuilles de présence par groupes.]:group:_guv_column"
  {-n,--slots}"[Permet de spécifier le nombre de séances pour le semestre c\'est à dire le nombre de colonne dans la feuille de présence.]:slots:"
  {-t,--template}"[Modèle permettant de fixer le nom des séances successives dans la feuille de présence. Par défaut on a \`\`S\{number\}\`\`. Le seul mot-clé supporté est \`\`number\`\` qui commence à 1.]:template:"
  "--save-tex[Permet de laisser les fichiers .tex générés pour modification éventuelle.]"
)

_shtab_guv_send_email_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  ":Le chemin vers un modèle au format Jinja2:"
)

_shtab_guv_xls_grade_book_group_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--name[Nom de la feuille de notes]:name:"
  "--marking-scheme[Fichiers contenant le ou les barèmes détaillés]:config_files:_files"
  {-o,--order-by}"[Colonne utilisée pour ordonner les noms dans chaque feuille]:order_by:_guv_column"
  {-w,--worksheets}"[Colonne utilisée pour grouper en plusieurs feuilles]:group_by:_guv_column"
  {-e,--extra-cols}"[Colonnes supplémentaires à inclure dans la feuille de notes]:extra_cols:_guv_columns"
  {-g,--group-by}"[Colonne de groupes utilisée pour noter des groupes d\'étudiants]:subgroup_by:_guv_column"
)

_shtab_guv_xls_grade_book_jury_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--name[Nom de la feuille de notes]:name:"
  "--config[Fichier de configuration spécifiant les notes à utiliser]:config_file:_files"
)

_shtab_guv_xls_grade_book_no_group_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--name[Nom de la feuille de notes]:name:"
  "--marking-scheme[Fichiers contenant le ou les barèmes détaillés]:config_files:_files"
  {-o,--order-by}"[Colonne utilisée pour ordonner les noms dans chaque feuille]:order_by:_guv_column"
  {-w,--worksheets}"[Colonne utilisée pour grouper en plusieurs feuilles]:group_by:_guv_column"
  {-e,--extra-cols}"[Colonnes supplémentaires à inclure dans la feuille de notes]:extra_cols:_guv_columns"
)

_shtab_guv_xls_student_data_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_guv_zoom_breakout_rooms_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  ":Le nom de la colonne des groupes:"
)


_shtab_guv() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_guv_options[(I)${(q)one_or_more}*]} + ${_shtab_guv_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_guv_options+=(': :_shtab_guv_commands' '*::: :->guv')
  fi
  _arguments -C -s $_shtab_guv_options

  case $state in
    guv)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_guv-$line[1]:"
      case $line[1] in
        csv_create_groups) _arguments -C -s $_shtab_guv_csv_create_groups_options ;;
        csv_groups) _arguments -C -s $_shtab_guv_csv_groups_options ;;
        csv_groups_groupings) _arguments -C -s $_shtab_guv_csv_groups_groupings_options ;;
        doit) _arguments -C -s $_shtab_guv_doit_options ;;
        pdf_attendance) _arguments -C -s $_shtab_guv_pdf_attendance_options ;;
        pdf_attendance_full) _arguments -C -s $_shtab_guv_pdf_attendance_full_options ;;
        send_email) _arguments -C -s $_shtab_guv_send_email_options ;;
        xls_grade_book_group) _arguments -C -s $_shtab_guv_xls_grade_book_group_options ;;
        xls_grade_book_jury) _arguments -C -s $_shtab_guv_xls_grade_book_jury_options ;;
        xls_grade_book_no_group) _arguments -C -s $_shtab_guv_xls_grade_book_no_group_options ;;
        xls_student_data) _arguments -C -s $_shtab_guv_xls_student_data_options ;;
        zoom_breakout_rooms) _arguments -C -s $_shtab_guv_zoom_breakout_rooms_options ;;
      esac
  esac
}

# Custom Preamble

_guv_column() {
    if test -e $(pwd)/generated/.columns.list; then
        local columns=("${(@f)$(cat $(pwd)/generated/.columns.list)}")
        _describe 'columns' columns
    fi
}

_guv_columns() {
    if test -e $(pwd)/generated/.columns.list; then
        local -a columns=("${(@f)$(cat $(pwd)/generated/.columns.list)}")
    fi

    _values -s , columns $columns
}

# End Custom Preamble


typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_guv -N guv
else
  # autoload from fpath, call function directly
  _shtab_guv "$@"
fi


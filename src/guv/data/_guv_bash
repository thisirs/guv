#!/usr/bin/env bash
# AUTOMATCALLY GENERATED by `shtab`

_shtab_guv_options_='-h --help'
_shtab_guv_commands_='cal_inst cal_uv createsemester createuv csv_create_groups csv_exam_groups csv_for_upload csv_groups csv_groups_groupings csv_moodle_groups doit fetch_group_id html_inst html_table ical_inst json_group json_restriction moodle_log pdf_attendance pdf_attendance_full pdf_trombinoscope xls_affectation xls_assignment_grade xls_grade_sheet xls_merge_final_grade xls_utp yaml_qcm zoom_breakout_rooms'

_shtab_guv_cal_inst='-h --help -p --plannings -i --insts'
_shtab_guv_cal_uv='-h --help'
_shtab_guv_createsemester='-h --help --uv'
_shtab_guv_createuv='-h --help'
_shtab_guv_csv_create_groups='-h --help -G --grouping -n --num-groups -s --group-size -p --proportions -t --template -l --names -o --ordered -g --global -r --random'
_shtab_guv_csv_exam_groups='-h --help -t --tiers-temps -p --tp'
_shtab_guv_csv_for_upload='-h --help -g --grade-colname --ects -c --comment-colname -f --format'
_shtab_guv_csv_groups='-h --help -g --groups'
_shtab_guv_csv_groups_groupings='-h --help -g -f -G -F'
_shtab_guv_csv_moodle_groups='-h --help -c --course -p --project -g --group-names -o --other-group'
_shtab_guv_doit='-h --help'
_shtab_guv_fetch_group_id='-h --help'
_shtab_guv_html_inst='-h --help'
_shtab_guv_html_table='-h --help -c --courses -g --grouped -a --num-AB -n --names --header-row-format'
_shtab_guv_ical_inst='-h --help -p --plannings -i --insts'
_shtab_guv_json_group='-h --help -g --group'
_shtab_guv_json_restriction='-h --help -c --course -a --num-AB'
_shtab_guv_moodle_log='-h --help'
_shtab_guv_pdf_attendance='-h --help -t --title -g --group -b --blank -c --count -n --names -e --extra --tiers-temps --save-tex'
_shtab_guv_pdf_attendance_full='-h --help -g --group -n --slots -t --template'
_shtab_guv_pdf_trombinoscope='-h --help -g --group -s --subgroup'
_shtab_guv_xls_affectation='-h --help'
_shtab_guv_xls_assignment_grade='-h --help -e --exam'
_shtab_guv_xls_grade_sheet='-h --help'
_shtab_guv_xls_merge_final_grade='-h --help -e --exam'
_shtab_guv_xls_utp='-h --help'
_shtab_guv_yaml_qcm='-h --help'
_shtab_guv_zoom_breakout_rooms='-h --help'


# $1=COMP_WORDS[1]
_shtab_compgen_files() {
  compgen -f -- $1  # files
  compgen -d -S '/' -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_compgen_dirs() {
  compgen -d -S '/' -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_replace_hyphen() {
  echo $1 | sed 's/-/_/g'
}

# $1=COMP_WORDS[1]
_shtab_replace_nonword() {
  echo "${1//[^[:word:]]/_}"
}

# $1=COMP_WORDS[1]
_shtab_guv_compgen_root_() {
  local args_gen="_shtab_guv_COMPGEN"
  case "$word" in
    -*) COMPREPLY=( $(compgen -W "$_shtab_guv_options_" -- "$word"; [ -n "${!args_gen}" ] && ${!args_gen} "$word") ) ;;
    *) COMPREPLY=( $(compgen -W "$_shtab_guv_commands_" -- "$word"; [ -n "${!args_gen}" ] && ${!args_gen} "$word") ) ;;
  esac
}

# $1=COMP_WORDS[1]
_shtab_guv_compgen_command_() {
  local flags_list="_shtab_guv_$(_shtab_replace_nonword $1)"
  local args_gen="${flags_list}_COMPGEN"
  COMPREPLY=( $(compgen -W "${!flags_list}" -- "$word"; [ -n "${!args_gen}" ] && ${!args_gen} "$word") )
}

# $1=COMP_WORDS[1]
# $2=COMP_WORDS[2]
_shtab_guv_compgen_subcommand_() {
  local flags_list="_shtab_guv_$(_shtab_replace_nonword "${1}_${2}")"
  local args_gen="${flags_list}_COMPGEN"
  [ -n "${!args_gen}" ] && local opts_more="$(${!args_gen} "$word")"
  local opts="${!flags_list}"
  if [ -z "$opts$opts_more" ]; then
    _shtab_guv_compgen_command_ $1
  else
    COMPREPLY=( $(compgen -W "$opts" -- "$word"; [ -n "$opts_more" ] && echo "$opts_more") )
  fi
}

# Notes:
# `COMPREPLY` contains what will be rendered after completion is triggered
# `word` refers to the current typed word
# `${!var}` is to evaluate the content of `var`
# and expand its content as a variable
#       hello="world"
#       x="hello"
#       ${!x} ->  ${hello} ->  "world"
_shtab_guv() {
  local word="${COMP_WORDS[COMP_CWORD]}"

  COMPREPLY=()

  if [ "${COMP_CWORD}" -eq 1 ]; then
    _shtab_guv_compgen_root_ ${COMP_WORDS[1]}
  elif [ "${COMP_CWORD}" -eq 2 ]; then
    _shtab_guv_compgen_command_ ${COMP_WORDS[1]}
  elif [ "${COMP_CWORD}" -ge 3 ]; then
    _shtab_guv_compgen_subcommand_ ${COMP_WORDS[1]} ${COMP_WORDS[2]}
  fi

  return 0
}

complete -o nospace -F _shtab_guv guv

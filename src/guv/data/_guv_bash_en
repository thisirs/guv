# AUTOMATICALLY GENERATED by `shtab`

_shtab_guv_subparsers=('doit' 'csv_create_groups' 'csv_groups' 'csv_groups_groupings' 'pdf_attendance' 'pdf_attendance_full' 'send_email' 'xls_grade_book_group' 'xls_grade_book_jury' 'xls_grade_book_no_group' 'xls_student_data' 'zoom_breakout_rooms')

_shtab_guv_option_strings=('-h' '--help')
_shtab_guv_doit_option_strings=('-h' '--help')
_shtab_guv_csv_create_groups_option_strings=('-h' '--help' '-G' '--grouping' '-n' '--num-groups' '-s' '--group-size' '-p' '--proportions' '-t' '--template' '-l' '--names' '-o' '--ordered' '-g' '--global' '-r' '--random' '--other-groups' '--affinity-groups' '--max-iter')
_shtab_guv_csv_groups_option_strings=('-h' '--help' '-g' '--groups' '-l' '--long' '-s' '--single')
_shtab_guv_csv_groups_groupings_option_strings=('-h' '--help' '-g' '-f' '-G' '-F')
_shtab_guv_pdf_attendance_option_strings=('-h' '--help' '-t' '--title' '-g' '--group' '-b' '--blank' '-c' '--count' '-n' '--names' '-e' '--extra' '--tiers-temps' '--save-tex')
_shtab_guv_pdf_attendance_full_option_strings=('-h' '--help' '--title' '-g' '--group' '-n' '--slots' '-t' '--template' '--save-tex')
_shtab_guv_send_email_option_strings=('-h' '--help')
_shtab_guv_xls_grade_book_group_option_strings=('-h' '--help' '--name' '--marking-scheme' '-o' '--order-by' '-w' '--worksheets' '-e' '--extra-cols' '-g' '--group-by')
_shtab_guv_xls_grade_book_jury_option_strings=('-h' '--help' '--name' '--config')
_shtab_guv_xls_grade_book_no_group_option_strings=('-h' '--help' '--name' '--marking-scheme' '-o' '--order-by' '-w' '--worksheets' '-e' '--extra-cols')
_shtab_guv_xls_student_data_option_strings=('-h' '--help')
_shtab_guv_zoom_breakout_rooms_option_strings=('-h' '--help')

_shtab_guv_csv_create_groups__G_COMPGEN=
_shtab_guv_csv_create_groups___grouping_COMPGEN=
_shtab_guv_csv_create_groups__o_COMPGEN=
_shtab_guv_csv_create_groups___ordered_COMPGEN=
_shtab_guv_csv_create_groups___other_groups_COMPGEN=
_shtab_guv_csv_create_groups___affinity_groups_COMPGEN=
_shtab_guv_csv_groups__g_COMPGEN=
_shtab_guv_csv_groups___groups_COMPGEN=
_shtab_guv_pdf_attendance__g_COMPGEN=
_shtab_guv_pdf_attendance___group_COMPGEN=
_shtab_guv_pdf_attendance___tiers_temps_COMPGEN=
_shtab_guv_pdf_attendance_full__g_COMPGEN=
_shtab_guv_pdf_attendance_full___group_COMPGEN=
_shtab_guv_xls_grade_book_group___marking_scheme_COMPGEN=_shtab_compgen_files
_shtab_guv_xls_grade_book_group__o_COMPGEN=
_shtab_guv_xls_grade_book_group___order_by_COMPGEN=
_shtab_guv_xls_grade_book_group__w_COMPGEN=
_shtab_guv_xls_grade_book_group___worksheets_COMPGEN=
_shtab_guv_xls_grade_book_group__e_COMPGEN=
_shtab_guv_xls_grade_book_group___extra_cols_COMPGEN=
_shtab_guv_xls_grade_book_group__g_COMPGEN=
_shtab_guv_xls_grade_book_group___group_by_COMPGEN=
_shtab_guv_xls_grade_book_jury___config_COMPGEN=_shtab_compgen_files
_shtab_guv_xls_grade_book_no_group___marking_scheme_COMPGEN=_shtab_compgen_files
_shtab_guv_xls_grade_book_no_group__o_COMPGEN=
_shtab_guv_xls_grade_book_no_group___order_by_COMPGEN=
_shtab_guv_xls_grade_book_no_group__w_COMPGEN=
_shtab_guv_xls_grade_book_no_group___worksheets_COMPGEN=
_shtab_guv_xls_grade_book_no_group__e_COMPGEN=
_shtab_guv_xls_grade_book_no_group___extra_cols_COMPGEN=

_shtab_guv_pos_0_choices=('doit' 'csv_create_groups' 'csv_groups' 'csv_groups_groupings' 'pdf_attendance' 'pdf_attendance_full' 'send_email' 'xls_grade_book_group' 'xls_grade_book_jury' 'xls_grade_book_no_group' 'xls_student_data' 'zoom_breakout_rooms')

_shtab_guv_pos_0_nargs=A...
_shtab_guv__h_nargs=0
_shtab_guv___help_nargs=0
_shtab_guv_doit_pos_0_nargs=...
_shtab_guv_doit__h_nargs=0
_shtab_guv_doit___help_nargs=0
_shtab_guv_csv_create_groups__h_nargs=0
_shtab_guv_csv_create_groups___help_nargs=0
_shtab_guv_csv_create_groups__p_nargs=+
_shtab_guv_csv_create_groups___proportions_nargs=+
_shtab_guv_csv_create_groups__l_nargs=+
_shtab_guv_csv_create_groups___names_nargs=+
_shtab_guv_csv_create_groups__o_nargs=?
_shtab_guv_csv_create_groups___ordered_nargs=?
_shtab_guv_csv_create_groups__g_nargs=0
_shtab_guv_csv_create_groups___global_nargs=0
_shtab_guv_csv_create_groups__r_nargs=0
_shtab_guv_csv_create_groups___random_nargs=0
_shtab_guv_csv_groups__h_nargs=0
_shtab_guv_csv_groups___help_nargs=0
_shtab_guv_csv_groups__l_nargs=0
_shtab_guv_csv_groups___long_nargs=0
_shtab_guv_csv_groups__s_nargs=0
_shtab_guv_csv_groups___single_nargs=0
_shtab_guv_csv_groups_groupings__h_nargs=0
_shtab_guv_csv_groups_groupings___help_nargs=0
_shtab_guv_pdf_attendance__h_nargs=0
_shtab_guv_pdf_attendance___help_nargs=0
_shtab_guv_pdf_attendance__b_nargs=0
_shtab_guv_pdf_attendance___blank_nargs=0
_shtab_guv_pdf_attendance__c_nargs=*
_shtab_guv_pdf_attendance___count_nargs=*
_shtab_guv_pdf_attendance__n_nargs=*
_shtab_guv_pdf_attendance___names_nargs=*
_shtab_guv_pdf_attendance___tiers_temps_nargs=?
_shtab_guv_pdf_attendance___save_tex_nargs=0
_shtab_guv_pdf_attendance_full__h_nargs=0
_shtab_guv_pdf_attendance_full___help_nargs=0
_shtab_guv_pdf_attendance_full___save_tex_nargs=0
_shtab_guv_send_email__h_nargs=0
_shtab_guv_send_email___help_nargs=0
_shtab_guv_xls_grade_book_group__h_nargs=0
_shtab_guv_xls_grade_book_group___help_nargs=0
_shtab_guv_xls_grade_book_jury__h_nargs=0
_shtab_guv_xls_grade_book_jury___help_nargs=0
_shtab_guv_xls_grade_book_no_group__h_nargs=0
_shtab_guv_xls_grade_book_no_group___help_nargs=0
_shtab_guv_xls_student_data__h_nargs=0
_shtab_guv_xls_student_data___help_nargs=0
_shtab_guv_zoom_breakout_rooms__h_nargs=0
_shtab_guv_zoom_breakout_rooms___help_nargs=0


# $1=COMP_WORDS[1]
_shtab_compgen_files() {
  compgen -f -- $1  # files
}

# $1=COMP_WORDS[1]
_shtab_compgen_dirs() {
  compgen -d -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_replace_nonword() {
  echo "${1//[^[:word:]]/_}"
}

# set default values (called for the initial parser & any subparsers)
_set_parser_defaults() {
  local subparsers_var="${prefix}_subparsers[@]"
  sub_parsers=${!subparsers_var-}

  local current_option_strings_var="${prefix}_option_strings[@]"
  current_option_strings=${!current_option_strings_var}

  completed_positional_actions=0

  _set_new_action "pos_${completed_positional_actions}" true
}

# $1=action identifier
# $2=positional action (bool)
# set all identifiers for an action's parameters
_set_new_action() {
  current_action="${prefix}_$(_shtab_replace_nonword $1)"

  local current_action_compgen_var=${current_action}_COMPGEN
  current_action_compgen="${!current_action_compgen_var-}"

  local current_action_choices_var="${current_action}_choices[@]"
  current_action_choices="${!current_action_choices_var-}"

  local current_action_nargs_var="${current_action}_nargs"
  if [ -n "${!current_action_nargs_var-}" ]; then
    current_action_nargs="${!current_action_nargs_var}"
  else
    current_action_nargs=1
  fi

  current_action_args_start_index=$(( $word_index + 1 - $pos_only ))

  current_action_is_positional=$2
}

# Notes:
# `COMPREPLY`: what will be rendered after completion is triggered
# `completing_word`: currently typed word to generate completions for
# `${!var}`: evaluates the content of `var` and expand its content as a variable
#     hello="world"
#     x="hello"
#     ${!x} -> ${hello} -> "world"
_shtab_guv() {
  local completing_word="${COMP_WORDS[COMP_CWORD]}"
  local previous_word="${COMP_WORDS[COMP_CWORD-1]}"
  local completed_positional_actions
  local current_action
  local current_action_args_start_index
  local current_action_choices
  local current_action_compgen
  local current_action_is_positional
  local current_action_nargs
  local current_option_strings
  local sub_parsers
  COMPREPLY=()

  local prefix=_shtab_guv
  local word_index=0
  local pos_only=0 # "--" delimeter not encountered yet
  _set_parser_defaults
  word_index=1

  # determine what arguments are appropriate for the current state
  # of the arg parser
  while [ $word_index -ne $COMP_CWORD ]; do
    local this_word="${COMP_WORDS[$word_index]}"

    if [[ $pos_only = 1 || " $this_word " != " -- " ]]; then
      if [[ -n $sub_parsers && " ${sub_parsers[@]} " == *" ${this_word} "* ]]; then
        # valid subcommand: add it to the prefix & reset the current action
        prefix="${prefix}_$(_shtab_replace_nonword $this_word)"
        _set_parser_defaults
      fi

      if [[ " ${current_option_strings[@]} " == *" ${this_word} "* ]]; then
        # a new action should be acquired (due to recognised option string or
        # no more input expected from current action);
        # the next positional action can fill in here
        _set_new_action $this_word false
      fi

      if [[ "$current_action_nargs" != "*" ]] && \
         [[ "$current_action_nargs" != "+" ]] && \
         [[ "$current_action_nargs" != *"..." ]] && \
         (( $word_index + 1 - $current_action_args_start_index - $pos_only >= \
            $current_action_nargs )); then
        $current_action_is_positional && let "completed_positional_actions += 1"
        _set_new_action "pos_${completed_positional_actions}" true
      fi
    else
      pos_only=1 # "--" delimeter encountered
    fi

    let "word_index+=1"
  done

  # Generate the completions

  if [[ $pos_only = 0 && "${completing_word}" == -* ]]; then
    # optional argument started: use option strings
    COMPREPLY=( $(compgen -W "${current_option_strings[*]}" -- "${completing_word}") )
  elif [[ "${previous_word}" == ">" || "${previous_word}" == ">>" ||
          "${previous_word}" =~ ^[12]">" || "${previous_word}" =~ ^[12]">>" ]]; then
    # handle redirection operators
    COMPREPLY=( $(compgen -f -- "${completing_word}") )
  else
    # use choices & compgen
    local IFS=$'\n' # items may contain spaces, so delimit using newline
    COMPREPLY=( $([ -n "${current_action_compgen}" ] \
                  && "${current_action_compgen}" "${completing_word}") )
    unset IFS
    COMPREPLY+=( $(compgen -W "${current_action_choices[*]}" -- "${completing_word}") )
  fi

  return 0
}

complete -o filenames -F _shtab_guv guv
